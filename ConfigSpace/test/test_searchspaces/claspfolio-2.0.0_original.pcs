# claspfolio-2.0.0 parameter file
# *** NOTE: *** works only with revision clasp-2.1.0 or higher!
# F: flag (yes = flag set; no = flag removed)
# S: skip (only to model constraints for the parameters; won't be given to
# clasp)
# :[String]: will not be parsed for clasp (only syntatic sugar for the parameter file)
# :[int]: alignment of complex parameters
# i : integer range
# l : logarithmic transformation (n > 0)
# ---
@1:separator {W}[W] 
@1:solver {/home/lindauer/workspace/claspfolio-2.0/src/trainer/main_train.py}[/home/lindauer/workspace/claspfolio-2.0/src/trainer/main_train.py]
# ---
@1:approach {REGRESSION, CLASSVOTER, CLASSMULTI, NN, kNN, CLUSTERING, SBS, ENSEMBLE, ASPEED}[CLASSVOTER]
@1:classifier {SVM, GRADIENTBOOSTING, RANDOMFOREST}[RANDOMFOREST]
@1:classifiermulti {SVM,RANDOMFOREST,GRADIENTBOOSTING}[SVM]
@1:max-feature-time [1,600][60]il
# Performance Preprocessing
@1:approx-weights {None,max,rmsd,nrmsd}[None]
@1:performance_trans {None,log,zscore}[None]
@1:contr-filter [0.0,0.32][0.0]
#normalization
@1:normalize {zscore,linear,dec,pca,none}[zscore]
@1:pca-dims[2,12][7]i
#svm
@1:voting:svm-gamma[0.001,1.0][1]l
@1:voting:svm-C[0.1,102.4][1.6]l
@1:multi:svm-gamma[0.001,1.0][1]l
@1:multi:svm-C[0.1,128][1.6]l
@1:reg:svm-gamma[0.001,1.0][1]l
@1:reg:svm-C[0.1,128][1]l
@1:reg:svr-epsilon[0.001,1][1]
#random forrest
@1:voting:rf-max_features {sqrt, log2, None}[sqrt]
@1:voting:rf-criterion {gini,entropy} [entropy]
@1:voting:rf-min_samples_leaf [1,128][10]li
@1:multi:rf-max_features {sqrt, log2, None}[sqrt]
@1:multi:rf-criterion {gini,entropy} [entropy]
@1:multi:rf-min_samples_leaf [1,128][16]li
@1:reg:rf-max_features {sqrt, log2, None}[sqrt]
@1:reg:rf-min_samples_leaf [1,128][16]li
#gradient boosting
@1:voting:gb-max_depth [1,16][4]i
@1:voting:gb-min_samples_leaf [1,128][16]li
@1:voting:gb-max_features {sqrt, log2, None}[sqrt]
@1:multi:gb-max_depth [1,16][4]i
@1:multi:gb-min_samples_leaf [1,128][16]li
@1:multi:gb-max_features {sqrt, log2, None}[sqrt]
# regression
@1:regressor {SVR,RIDGE,LASSO,RANDOMFOREST}[SVR]
# ridge regression
@1:ridge-alpha [0.01,10.0][1.0]l
#lasso regression
@1:lasso-alpha [0.01,10.0][1.0]l
#CLUSTERING
@1:clusteralgo {GM,KMEANS,SPECTRAL}[GM]
@1:clu-max-clusters {sqrt,log,solvers}[sqrt]
#kNN
@1:kNN [1,128][1]il
#--aspeed-opt
@1:F:aspeed-opt {no,yes}[yes]
@1:F:ASPEED:aspeed-opt {yes}[yes]
@1:F:concentrate {yes,no}[no]
@1:max-solver [1,100][3]il
@1:opt-mode {1,2,3,4,5,6}[1]
@1:aspeed:time-limit {300}[300] # maximal time for grounding and solving
@1:time-pre-solvers [1,2048][256]il
#ensemble
@1:sub-size [0.1,1.0][0.7]
@1:F:bootstrapping {yes,no}[no]
@1:en-opt-q [0,100][50]i
@1:1:REGRESSION:n-models [0,10][1]i
@1:2:CLASSVOTER:n-models [0,10][1]i
@1:3:CLASSMULTI:n-models [0,10][0]i
@1:4:NN:n-models [0,10][1]i
@1:5:kNN:n-models [0,10][1]i
@1:6:CLUSTERING:n-models [0,10][1]i

@1:classifier | @1:approach in {CLASSVOTER, ENSEMBLE}
@1:classifiermulti | @1:approach in {CLASSMULTI, ENSEMBLE}
@1:regressor | @1:approach in {REGRESSION, ENSEMBLE}
@1:pca-dims | @1:normalize in {pca}
@1:voting:svm-gamma | @1:classifier in {SVM}
@1:multi:svm-gamma | @1:classifiermulti in {SVM}
@1:reg:svm-gamma | @1:regressor in {SVR}
@1:voting:svm-C | @1:classifier in {SVM}
@1:multi:svm-C | @1:classifiermulti in {SVM}
@1:reg:svm-C | @1:regressor in {SVR}
@1:reg:svr-epsilon | @1:regressor in {SVR}
@1:voting:rf-max_features | @1:classifier in {RANDOMFOREST}
@1:voting:rf-criterion | @1:classifier in {RANDOMFOREST}
@1:voting:rf-min_samples_leaf | @1:classifier in {RANDOMFOREST}
@1:multi:rf-max_features | @1:classifiermulti in {RANDOMFOREST}
@1:multi:rf-criterion | @1:classifiermulti in {RANDOMFOREST}
@1:multi:rf-min_samples_leaf | @1:classifiermulti in {RANDOMFOREST}
@1:reg:rf-max_features | @1:regressor in {RANDOMFOREST}
@1:reg:rf-min_samples_leaf | @1:regressor in {RANDOMFOREST}
@1:voting:gb-max_depth | @1:classifier in {GRADIENTBOOSTING}
@1:voting:gb-min_samples_leaf | @1:classifier in {GRADIENTBOOSTING}
@1:voting:gb-max_features | @1:classifier in {GRADIENTBOOSTING}
@1:multi:gb-max_depth | @1:classifiermulti in {GRADIENTBOOSTING}
@1:multi:gb-min_samples_leaf | @1:classifiermulti in {GRADIENTBOOSTING}
@1:multi:gb-max_features | @1:classifiermulti in {GRADIENTBOOSTING}
@1:ridge-alpha | @1:regressor in {RIDGE}
@1:lasso-alpha | @1:regressor in {LASSO}
@1:clusteralgo | @1:approach in {CLUSTERING, ENSEMBLE}
@1:clu-max-clusters | @1:approach in {CLUSTERING, ENSEMBLE}
@1:kNN | @1:approach in {kNN, ENSEMBLE}
@1:F:aspeed-opt | @1:approach in {REGRESSION, CLASSVOTER, CLASSMULTI, NN, kNN, CLUSTERING, SBS, ENSEMBLE}
@1:F:ASPEED:aspeed-opt | @1:approach in {ASPEED}
@1:F:concentrate | @1:F:aspeed-opt in {yes}
@1:F:concentrate | @1:approach in {ASPEED}
@1:max-solver | @1:F:aspeed-opt in {yes}
@1:max-solver | @1:approach in {ASPEED}
@1:opt-mode | @1:F:aspeed-opt in {yes}
@1:opt-mode | @1:approach in {ASPEED}
@1:time-pre-solvers | @1:F:aspeed-opt in {yes}
@1:time-pre-solvers | @1:approach in {ASPEED}
@1:sub-size | @1:approach in {ENSEMBLE}
@1:F:bootstrapping | @1:approach in {ENSEMBLE}
@1:en-opt-q | @1:approach in {ENSEMBLE}
@1:1:REGRESSION:n-models | @1:approach in {ENSEMBLE}
@1:2:CLASSVOTER:n-models | @1:approach in {ENSEMBLE}
@1:3:CLASSMULTI:n-models | @1:approach in {ENSEMBLE}
@1:4:NN:n-models | @1:approach in {ENSEMBLE}
@1:5:kNN:n-models | @1:approach in {ENSEMBLE}
@1:6:CLUSTERING:n-models | @1:approach in {ENSEMBLE}
